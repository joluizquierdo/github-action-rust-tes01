name: Release

on:
  push:
    # tags:
    #   - "v[0-9].*"

permissions:
  contents: write

jobs:
  # create-release:
  #   # TODO: parametrize in jinja template
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v5
  #
  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       with:
  #         tag_name: ${{ github.ref_name }}
  #         release_name: Release ${{ github.ref_name }}
  #         draft: false
  #         prerelease: false
  #
  #     - name: Upload Release Asset
  #       uses: actions/upload-release-asset@v1
  #       with:
  #         upload_url: ${{ steps.create_release.outputs.upload_url }}
  #         asset_path: ./path/to/your/asset.zip
  #         asset_name: asset.zip
  #         asset_content_type: application/zip
  upload:
    # TODO: parametrize in jinja template
    strategy:
      matrix:
        #you can list all the targets using
        # rustup target list
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            features: ""
          # - target: x86_64-pc-windows-gnu
          #   os: windows-latest
          #   features: ""
          # - target: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          #   native: false
          #   features: ""
          # macos runners example
          # - target: aarch64-apple-darwin
          #   os: macos-latest
          #   features: ""
          # self-hosted runners example
          # - target: x86_64-unknown-linux-gnu
          #   os: [self-hosted, linux]
          #   features: ""

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5

      - name: Set up Rust 🔧
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          target: ${{ matrix.target }}
          components: rustfmt, clippy
          rust-src-dir: ${{ github.workspace }}/rust-action

      # TODO: optionally add test step here with jinja template
      # if tests are disabled, comment them, do not delete
      # the step entirely
      # - name: Run tests 🧪
      #   if: ${{ matrix.native == true }}
      #   run: cargo test --target ${{ matrix.target }} --all-features
      - name: Build ⚙️
        env:
          TARGET: ${{ matrix.target }}
          FEATURES: ${{ matrix.features }}
        working-directory: ${{ github.workspace }}/rust-action
        run: |
          cargo build --release --locked --features "${FEATURES}"

      # - name: Upload Release Binary 📦
      #   uses: taiki-e/upload-rust-binary-action@v1
      #   with:
      #     bin: your-binary-name # e.g., 'myapp'
      #     target: ${{ matrix.target }}
      #     archive: tar # Or zip for Windows if extending
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     features: ${{ matrix.features }}
